version: '3'

services:

  #####################
  # Postgres Database #
  #####################

  database:
    image: postgres:15-alpine
    container_name: ecs_database
    restart: always
    environment:
      - POSTGRES_USER=ecs
      - POSTGRES_PASSWORD=ecs
      - POSTGRES_DATABASE=ecs
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    command: postgres -c jit=off
    shm_size: 1024m

  ##############
  # Mailserver #
  ##############

  mailserver:
    image: ghcr.io/docker-mailserver/docker-mailserver:11.1
    container_name: ecs_mailserver
    hostname: mail.${HOST}
    restart: always
    environment:
      - LOG_LEVEL=warn
      - PERMIT_DOCKER=host
      - SMTP_ONLY=1
      - SSL_TYPE=letsencrypt
    volumes:
      - ./data/mailserver/mail-data/:/var/mail/
      - ./data/mailserver/mail-state/:/var/mail-state/
      - ./data/mailserver/mail-logs/:/var/log/mail/
      - ./data/mailserver/config/:/tmp/docker-mailserver/
      - ./data/acme/:/etc/letsencrypt/
      - /etc/localtime:/etc/localtime:ro
    stop_grace_period: 1m
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0

  #########################
  # Traefik Reverse Proxy #
  #########################

  reverse-proxy:
    image: traefik:v2.8
    container_name: ecs_reverse-proxy
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-conf/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik-conf/dynamic.toml:/etc/traefik/dynamic.toml:ro
      - ./data/ecs/ca/:/etc/ecs-ca/:ro
      - ./data/acme:/etc/traefik/acme
    ports:
      - '25:25'
      - '80:80'
      - '443:443'
    command:
      - --certificatesResolvers.mytlschallenge.acme.email=${ACME_EMAIL}

  #######
  # ECS #
  #######

  ecs.web:
    image: ghcr.io/programmierfabrik/ecs:${TAG:?}
    container_name: ecs_web
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/ecs:/opt/ecs/data
      - ./volatile/ecs:/opt/ecs/volatile
    labels:
      - 'traefik.http.routers.ecs-web.entryPoints=web'
      - 'traefik.http.routers.ecs-web.rule=Host(`${HOST}`)'
      - 'traefik.http.routers.ecs-web-secure.entryPoints=web-secure'
      - 'traefik.http.routers.ecs-web-secure.rule=Host(`${HOST}`)'
      - 'traefik.http.routers.ecs-web-secure.middlewares=passtlsclientcert@file'
      - 'traefik.http.routers.ecs-web-secure.tls=true'
      - 'traefik.http.routers.ecs-web-secure.tls.certResolver=mytlschallenge'
    command: daphne -b 0.0.0.0 --proxy-headers ecs.asgi:application
    depends_on:
      - database
      - redis

  ecs.worker:
    image: ghcr.io/programmierfabrik/ecs:${TAG:?}
    container_name: ecs_worker
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/ecs:/opt/ecs/data
      - ./volatile/ecs:/opt/ecs/volatile
    command: celery -A ecs worker -l warning
    depends_on:
      - ecs.web
      - redis

  ecs.smtpd:
    image: ghcr.io/programmierfabrik/ecs:${TAG:?}
    container_name: ecs_smtpd
    restart: always
    env_file:
      - .env
    environment:
      PROXY: true
    volumes:
      - ./data/acme/live/${HOST}/:/opt/certs/
    labels:
      - 'traefik.tcp.routers.smtp.rule=HostSNI(`*`)'
      - 'traefik.tcp.routers.smtp.entrypoints=smtp'
      - 'traefik.tcp.routers.smtp.service=smtp'
      - 'traefik.tcp.services.smtp.loadbalancer.server.port=8025'
      - 'traefik.tcp.services.smtp.loadbalancer.proxyProtocol.version=2'
    command: ./manage.py smtpd -l warning
    expose:
      - '8025'
    depends_on:
      - ecs.web

  ecs.beat:
    image: ghcr.io/programmierfabrik/ecs:${TAG:?}
    container_name: ecs_beat
    restart: always
    env_file:
      - .env
    command: celery -A ecs beat -l warning
    depends_on:
      - ecs.web
      - redis

  ecs.docs:
    image: ghcr.io/programmierfabrik/ecs-docs:latest
    container_name: ecs_docs
    restart: always
    labels:
      - 'traefik.http.routers.ecs-docs.entryPoints=web'
      - 'traefik.http.routers.ecs-docs.rule=Host(`${HOST}`) && PathPrefix(`/help`)'
      - 'traefik.http.routers.ecs-docs-secure.entryPoints=web-secure'
      - 'traefik.http.routers.ecs-docs-secure.rule=Host(`${HOST}`) && PathPrefix(`/help`)'
      - 'traefik.http.routers.ecs-docs-secure.tls=true'
      - 'traefik.http.routers.ecs-docs-secure.tls.certResolver=mytlschallenge'

  redis:
    image: redis:7.0-alpine
    container_name: ecs_redis
    restart: always
    volumes:
      - ./volatile/redis:/data

  pdfas:
    image: ghcr.io/programmierfabrik/pdf-as-web:4.2.0
    container_name: ecs_pdfas
    restart: always
    environment:
      HOST: $HOST
    labels:
      - 'traefik.http.routers.ecs-pdfas.entryPoints=web'
      - 'traefik.http.routers.ecs-pdfas.rule=Host(`${HOST}`) && PathPrefix(`/pdf-as-web`)'
      - 'traefik.http.routers.ecs-pdfas-secure.entryPoints=web-secure'
      - 'traefik.http.routers.ecs-pdfas-secure.rule=Host(`${HOST}`) && PathPrefix(`/pdf-as-web`)'
      - 'traefik.http.routers.ecs-pdfas-secure.tls=true'
      - 'traefik.http.routers.ecs-pdfas-secure.tls.certResolver=mytlschallenge'
    mem_limit: 1024m

  ##########
  # Backup #
  ##########

  backup:
    image: ghcr.io/tecnativa/docker-duplicity-docker:v3.0.3
    container_name: ecs_backup
    restart: unless-stopped
    hostname: ecs.backup
    privileged: true
    environment:
      CRONTAB_DAILY: 0 22 * * *
      OPTIONS: --full-if-older-than=1W
      PASSPHRASE: ${BACKUP_PASSPHRASE}
      TZ: Europe/Vienna
      DST: ${BACKUP_URI}
      JOB_100_WHAT: docker exec ecs_database pg_dump -U ecs -Fc -Z0 | gzip > $${SRC}/dump/ecs.pgdump.gz
      JOB_100_WHEN: daily
      JOB_200_WHAT: backup
      JOB_200_WHEN: daily
      JOB_300_WHAT: dup remove-all-but-n-full 4 --force $$DST
      JOB_300_WHEN: daily
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/ecs/storage-vault:/mnt/backup/src/storage-vault:ro
      - ./data/ecs/dump:/mnt/backup/src/dump
      - ./backup:/local-backup
      - ./data/.ssh/:/root/.ssh
      - ./volatile/backup:/root
    depends_on:
      - database

networks:
  default:
    name: ecs-reverse-proxy
